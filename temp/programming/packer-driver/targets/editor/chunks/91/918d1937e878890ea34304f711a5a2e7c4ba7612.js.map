{"version":3,"sources":["file:///Users/artemfedorov/Documents/dev/rpg-mini/assets/Scripts/components/TeamsBuilderComponent.ts"],"names":["_decorator","Component","instantiate","Node","Prefab","v3","HeroComponent","EventManager","BattleComponent","PoolObjectComponent","ccclass","property","TeamsBuilderComponent","type","team1","team2","battleData","bulletFactory","couner","onHeroReadyToPosition","hero","heroes","length","walk","onHeroReadyForBattle","initBattle","onLoad","add","onDestroy","remove","init","node","getComponent","initializeTeams","createTeam","targetTeam","initPosition","config","team","id","isLeft","currentHero","currentIndexHero","forEach","heroConfig","heroPrefab","push","CharactersContainer","addChild","i","side","pos","getChildByName","getPosition","x","setPosition","m","step","positionTo"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab, v3, Vec3 } from 'cc';\nimport { HeroComponent } from '../../prefabs/scripts/HeroComponent';\nimport { HeroConfig } from '../ConfigTypes';\nimport { BattleData, TeamData } from '../GameTypes';\nimport EventManager from '../eventManager/EventManager';\nimport { BattleComponent } from './BattleComponent';\nimport { PoolObjectComponent } from './poolFactory/PoolObjectComponent';\nconst { ccclass, property } = _decorator;\n\n\nexport type Team = {\n    id: number;\n    isLeft: boolean;\n    currentHero: HeroComponent;\n    currentIndexHero: number;\n    targetTeam: Team;\n    heroes: HeroComponent[]\n}\n\n@ccclass('TeamsBuilderComponent')\nexport class TeamsBuilderComponent extends Component {\n\n    @property({ type: Prefab })\n    public heroPrefab: Prefab = null;\n\n    @property(Node)\n    private CharactersContainer: Node = null;\n\n    @property(BattleComponent)\n    private BattleComponent: BattleComponent = null;\n\n    private team1: Team;\n    private team2: Team;\n\n    battleData: BattleData;\n    bulletFactory: PoolObjectComponent;\n\n    private couner: number = 0;\n\n    protected onLoad(): void {\n        EventManager.add('readyToPosition', this.onHeroReadyToPosition);\n        EventManager.add('readyForBattle', this.onHeroReadyForBattle);\n    }\n\n    protected onDestroy(): void {\n        EventManager.remove('readyToPosition', this.onHeroReadyToPosition);\n        EventManager.remove('readyForBattle', this.onHeroReadyForBattle);\n    }\n\n    init(battleData: BattleData) {\n        this.bulletFactory = this.node.getComponent(PoolObjectComponent);\n        this.battleData = battleData;\n        this.initializeTeams();\n    }\n\n    private initializeTeams() {\n        this.team1 = this.createTeam(this.battleData.team1);\n        this.team2 = this.createTeam(this.battleData.team2);\n        this.team1.targetTeam = this.team2;\n        this.team2.targetTeam = this.team1;\n        this.initPosition(this.team1);\n        this.initPosition(this.team2);\n    }\n\n    private createTeam(config: TeamData): Team {\n        const team: Team = {\n            id: config.id,\n            isLeft: config.id === 1,\n            currentHero: null,\n            currentIndexHero: 0,\n            targetTeam: null,\n            heroes: []\n        };\n\n        config.heroes.forEach((heroConfig: HeroConfig) => {\n            const hero = instantiate(this.heroPrefab);\n            hero.getComponent(HeroComponent).team = team;\n            hero.getComponent(HeroComponent).init(heroConfig, this.bulletFactory)\n            team.heroes.push(hero.getComponent(HeroComponent));\n            this.CharactersContainer.addChild(hero);\n        });\n\n        return team;\n    }\n\n    initPosition(team: Team): void {\n        team.heroes.forEach((hero: HeroComponent, i: number) => {\n            const side: string = team.isLeft ? 'left' : 'right';\n            const pos: Vec3 = this.CharactersContainer.getChildByName(`${side}Out`).getPosition();\n\n            if (team.isLeft) {\n                pos.x -= i * 50;\n            } else {\n                pos.x += i * 50;\n            }\n            hero.node.setPosition(pos);\n            this.CharactersContainer.addChild(hero.node);\n        });\n    }\n\n    private onHeroReadyToPosition = (hero: HeroComponent): void => {\n        this.couner++;\n        if (this.couner === this.battleData.team1.heroes.length + this.battleData.team2.heroes.length) {\n            this.walk(this.team1);\n            this.walk(this.team2);\n            this.couner = 0;\n        }\n    }\n\n    private onHeroReadyForBattle = (): void => {\n        this.couner++;\n        if (this.couner === this.battleData.team1.heroes.length + this.battleData.team2.heroes.length) {\n            this.BattleComponent.initBattle(this.team1, this.team2);\n        }\n    }\n\n    walk(team: Team) {\n        let m = team.isLeft ? -1 : 1;\n        let step = 700 / team.heroes.length;\n        team.heroes.forEach((hero: HeroComponent, i: number) => {\n            const side: string = hero.team.isLeft ? 'left' : 'right';\n            hero.positionTo(v3(i * step * m + (300 * m), 0, 0), this.onHeroReadyForBattle);\n        });\n        this.couner = 0;\n\n    }\n}"]}