{"version":3,"sources":["file:///Users/artemfedorov/Documents/dev/rpg-mini/assets/Scripts/scenes/MainMenuScene.ts"],"names":["_decorator","Component","Button","director","Animation","Node","Facade","HeroesTabComponent","ccclass","property","MainMenuScene","type","start","startGameButton","node","on","onStartGame","active","loadScene","showHeroesTab","HeroesTab","getComponent","play","closeHeroesTab","battleData","team1","name","heroes","checkedHeroes","team2","getEnemyTeam","json","heroesConfig","length","count","uniqueElements","Array","from","Set","i","j","Math","floor","random","slice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;AACtDC,MAAAA,M;;AACEC,MAAAA,kB,iBAAAA,kB;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;+BAGjBU,a,WADZF,OAAO,CAAC,eAAD,C,UAGHC,QAAQ,CAACP,MAAD,C,UAGRO,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,2BANb,MACaK,aADb,SACmCT,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAQzCW,QAAAA,KAAK,GAAG;AACJ,eAAKC,eAAL,CAAqBC,IAArB,CAA0BC,EAA1B,CAA6B,OAA7B,EAAsC,KAAKC,WAA3C,EAAwD,IAAxD;AACA,eAAKH,eAAL,CAAqBC,IAArB,CAA0BG,MAA1B,GAAmC,KAAnC;AACH;;AAEDD,QAAAA,WAAW,GAAG;AACVb,UAAAA,QAAQ,CAACe,SAAT,CAAmB,WAAnB,EADU,CACuB;AACpC;;AAEDC,QAAAA,aAAa,GAAG;AACZ,eAAKC,SAAL,CAAeC,YAAf,CAA4BjB,SAA5B,EAAuCkB,IAAvC,CAA4C,eAA5C;AACH;;AAEDC,QAAAA,cAAc,GAAG;AACb;AAAA;AAAA,gCAAOC,UAAP,GAAoB;AAChBC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAE,QADH;AAEHC,cAAAA,MAAM,EAAE,KAAKP,SAAL,CAAeC,YAAf;AAAA;AAAA,4DAAgDO;AAFrD,aADS;AAKhBC,YAAAA,KAAK,EAAE;AACHH,cAAAA,IAAI,EAAE,IADH;AAEHC,cAAAA,MAAM,EAAE,KAAKG,YAAL,CAAkB;AAAA;AAAA,oCAAOC,IAAP,CAAYC,YAA9B,EAA4C,CAA5C;AAFL;AALS,WAApB;AAWA,eAAKZ,SAAL,CAAeC,YAAf,CAA4BjB,SAA5B,EAAuCkB,IAAvC,CAA4C,gBAA5C;;AAEA,cAAI;AAAA;AAAA,gCAAOE,UAAP,CAAkBC,KAAlB,CAAwBE,MAAxB,CAA+BM,MAA/B,GAAwC,CAAxC,IACA;AAAA;AAAA,gCAAOT,UAAP,CAAkBK,KAAlB,CAAwBF,MAAxB,CAA+BM,MAA/B,GAAwC,CAD5C,EAC+C;AAC3C,iBAAKpB,eAAL,CAAqBC,IAArB,CAA0BG,MAA1B,GAAmC,IAAnC;AACH;AACJ;;AAEDa,QAAAA,YAAY,CAACE,YAAD,EAA6BE,KAA7B,EAA0D;AAClE,gBAAMC,cAAc,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQN,YAAR,CAAX,CAAvB;;AAEA,eAAK,IAAIO,CAAC,GAAGJ,cAAc,CAACF,MAAf,GAAwB,CAArC,EAAwCM,CAAC,GAAG,CAA5C,EAA+CA,CAAC,EAAhD,EAAoD;AAChD,kBAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,aAACJ,cAAc,CAACI,CAAD,CAAf,EAAoBJ,cAAc,CAACK,CAAD,CAAlC,IAAyC,CAACL,cAAc,CAACK,CAAD,CAAf,EAAoBL,cAAc,CAACI,CAAD,CAAlC,CAAzC;AACH;;AAED,iBAAOJ,cAAc,CAACS,KAAf,CAAqB,CAArB,EAAwBV,KAAxB,CAAP;AACH;;AAlDwC,O;;;;;iBAGf,I;;;;;;;iBAGD,I","sourcesContent":["import { _decorator, Component, Button, director, Animation, Node } from 'cc';\nimport Facade from '../Facade';\nimport { HeroesTabComponent } from '../components/HeroesTabComponent';\nimport { HeroConfig } from '../ConfigTypes';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MainMenuScene')\nexport class MainMenuScene extends Component {\n\n    @property(Button)\n    startGameButton: Button = null;\n\n    @property({ type: Node })\n    public HeroesTab: Node = null;\n\n    start() {\n        this.startGameButton.node.on('click', this.onStartGame, this);\n        this.startGameButton.node.active = false;\n    }\n\n    onStartGame() {\n        director.loadScene('GameScene'); // Switch to GameScene when the button is clicked\n    }\n\n    showHeroesTab() {\n        this.HeroesTab.getComponent(Animation).play('HeroesTabOpen');\n    }\n\n    closeHeroesTab() {\n        Facade.battleData = {\n            team1: {\n                name: 'player',\n                heroes: this.HeroesTab.getComponent(HeroesTabComponent).checkedHeroes,\n            },\n            team2: {\n                name: 'pc',\n                heroes: this.getEnemyTeam(Facade.json.heroesConfig, 5)\n            }\n        }\n\n        this.HeroesTab.getComponent(Animation).play('HeroesTabClose');\n\n        if (Facade.battleData.team1.heroes.length > 0 &&\n            Facade.battleData.team2.heroes.length > 0) {\n            this.startGameButton.node.active = true;\n        }\n    }\n\n    getEnemyTeam(heroesConfig: HeroConfig[], count: number): HeroConfig[] {\n        const uniqueElements = Array.from(new Set(heroesConfig));\n\n        for (let i = uniqueElements.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [uniqueElements[i], uniqueElements[j]] = [uniqueElements[j], uniqueElements[i]];\n        }\n\n        return uniqueElements.slice(0, count);\n    }\n}\n"]}