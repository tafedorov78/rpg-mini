{"version":3,"sources":["file:///Users/artemfedorov/Documents/dev/rpg-mini/assets/Scripts/components/BattleComponent.ts"],"names":["_decorator","Component","EventManager","ccclass","property","BattleComponent","team1","team2","onHeroDead","hero","team","heroes","splice","indexOf","isBattleOver","endBattle","onLoad","add","onDestroy","remove","initBattle","startAttackCycles","targetTeam","startAttack","length","console","log","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAEdC,MAAAA,Y;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;iCAajBK,e,WADZF,OAAO,CAAC,iBAAD,C,gBAAR,MACaE,eADb,SACqCJ,SADrC,CAC+C;AAAA;AAAA;AAAA,eAEnCK,KAFmC;AAAA,eAGnCC,KAHmC;;AAAA,eA2BnCC,UA3BmC,GA2BrBC,IAAD,IAA+B;AAChDA,YAAAA,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBC,MAAjB,CAAwBH,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBE,OAAjB,CAAyBJ,IAAzB,CAAxB,EAAwD,CAAxD;;AAEA,gBAAI,KAAKK,YAAL,EAAJ,EAAyB;AACrB,mBAAKC,SAAL;AACH;AACJ,WAjC0C;AAAA;;AAKjCC,QAAAA,MAAM,GAAS;AACrB;AAAA;AAAA,4CAAaC,GAAb,CAAiB,OAAjB,EAA0B,KAAKT,UAA/B;AACH;;AAESU,QAAAA,SAAS,GAAS;AACxB;AAAA;AAAA,4CAAaC,MAAb,CAAoB,OAApB,EAA6B,KAAKX,UAAlC;AACH;;AAEDY,QAAAA,UAAU,CAACd,KAAD,EAAcC,KAAd,EAA2B;AACjC,eAAKD,KAAL,GAAaA,KAAb;AACA,eAAKC,KAAL,GAAaA,KAAb;AAEA,eAAKc,iBAAL,CAAuB,KAAKf,KAA5B,EAAmC,KAAKC,KAAxC;AACA,eAAKc,iBAAL,CAAuB,KAAKd,KAA5B,EAAmC,KAAKD,KAAxC;AACH;;AAEOe,QAAAA,iBAAiB,CAACX,IAAD,EAAaY,UAAb,EAA+B;AACpD,eAAK,MAAMb,IAAX,IAAmBC,IAAI,CAACC,MAAxB,EAAgC;AAC5BF,YAAAA,IAAI,CAACc,WAAL,CAAiBD,UAAjB;AACH;AACJ;;AAUOR,QAAAA,YAAY,GAAY;AAC5B,iBAAO,KAAKR,KAAL,CAAWK,MAAX,CAAkBa,MAAlB,KAA6B,CAA7B,IAAkC,KAAKjB,KAAL,CAAWI,MAAX,CAAkBa,MAAlB,KAA6B,CAAtE;AACH;;AAEOT,QAAAA,SAAS,GAAG;AAChB,cAAI,KAAKT,KAAL,CAAWK,MAAX,CAAkBa,MAAlB,GAA2B,CAA/B,EAAkC;AAC9BC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA;AAAA;AAAA,8CAAaC,QAAb,CAAsB,SAAtB,EAAiC,CAAjC;AACH,WAJD,MAIO;AACHF,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;AAAA;AAAA,8CAAaC,QAAb,CAAsB,SAAtB,EAAiC,CAAjC;AACH;AACJ;;AAhD0C,O","sourcesContent":["import { _decorator, Component } from 'cc';\nimport { HeroComponent } from '../../prefabs/scripts/HeroComponent';\nimport EventManager from '../eventManager/EventManager';\nconst { ccclass, property } = _decorator;\n\n\nexport type Team = {\n    name: string;\n    isLeft: boolean;\n    currentHero: HeroComponent;\n    currentIndexHero: number;\n    targetTeam: Team;\n    heroes: HeroComponent[]\n}\n\n@ccclass('BattleComponent')\nexport class BattleComponent extends Component {\n\n    private team1: Team;\n    private team2: Team;\n\n    protected onLoad(): void {\n        EventManager.add('death', this.onHeroDead);\n    }\n\n    protected onDestroy(): void {\n        EventManager.remove('death', this.onHeroDead);\n    }\n\n    initBattle(team1: Team, team2: Team) {\n        this.team1 = team1;\n        this.team2 = team2;\n\n        this.startAttackCycles(this.team1, this.team2);\n        this.startAttackCycles(this.team2, this.team1);\n    }\n\n    private startAttackCycles(team: Team, targetTeam: Team) {\n        for (const hero of team.heroes) {\n            hero.startAttack(targetTeam);\n        }\n    }\n\n    private onHeroDead = (hero: HeroComponent): void => {\n        hero.team.heroes.splice(hero.team.heroes.indexOf(hero), 1);\n\n        if (this.isBattleOver()) {\n            this.endBattle();\n        }\n    }\n\n    private isBattleOver(): boolean {\n        return this.team1.heroes.length === 0 || this.team2.heroes.length === 0;\n    }\n\n    private endBattle() {\n        if (this.team1.heroes.length > 0) {\n            console.log('Win team 1');\n\n            EventManager.dispatch('victory', 1);\n        } else {\n            console.log('Win team 2');\n            EventManager.dispatch('victory', 2);\n        }\n    }\n}"]}