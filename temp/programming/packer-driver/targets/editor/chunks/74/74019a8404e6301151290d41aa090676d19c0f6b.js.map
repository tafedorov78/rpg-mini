{"version":3,"sources":["file:///Users/artemfedorov/Documents/dev/rpg-mini/assets/Scripts/components/poolFactory/PoolFactoryComponent.ts"],"names":["property","arg0","Error","ccclass","Prefab","instantiate","Component","CCInteger","PoolFactoryComponent","type","_pool","onLoad","i","Size","coin","prefab","pool","put","get","node","decorate","value"],"mappings":";;;;;;;;;;;AA8CA,WAASA,QAAT,CAAkBC,IAAlB,EAAwG;AACpG,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;;AACD,WAASC,OAAT,CAAiBF,IAAjB,EAA0F;AACtF,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;;;;;;;AAnDcE,MAAAA,M,OAAAA,M;AAAkBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;;;;;;;;;sCAG5CC,oB,WADZL,OAAO,CAAC,sBAAD,C,UAGHH,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEL;AAAR,OAAD,C,UAIRJ,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEF;AAAR,OAAD,C,2BAPb,MACaC,oBADb,SAC0CF,SAD1C,CACoD;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eASxCI,KATwC;AAAA;;AAWtCC,QAAAA,MAAM,GAAS;AACrB,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,IAAzB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,kBAAME,IAAI,GAAGT,WAAW,CAAC,KAAKU,MAAN,CAAxB;AACA,iBAAKC,IAAL,CAAUC,GAAV,CAAcH,IAAd;AACH;AACJ;;AAEMI,QAAAA,GAAG,GAAS;AACf,cAAIC,IAAI,GAAG,KAAKH,IAAL,CAAUE,GAAV,EAAX;;AACA,cAAI,CAACC,IAAL,EAAW;AACPA,YAAAA,IAAI,GAAG,KAAKC,QAAL,CAAcf,WAAW,CAAC,KAAKU,MAAN,CAAzB,CAAP;AACH;;AACD,iBAAOI,IAAP;AACH;;AAEMC,QAAAA,QAAQ,CAACD,IAAD,EAAmB;AAC9B,iBAAOA,IAAP;AACH;;AAEMF,QAAAA,GAAG,CAACH,IAAD,EAAmB;AACzB,eAAKE,IAAL,CAAUC,GAAV,CAAcH,IAAd;AACH;;AAEO,YAAJE,IAAI,CAACK,KAAD,EAAkB;AACtB,eAAKX,KAAL,GAAaW,KAAb;AACH;;AAEO,YAAJL,IAAI,GAAa;AACjB,iBAAO,KAAKN,KAAZ;AACH;;AAxC+C,O;;;;;;;;;;iBAO1B,C","sourcesContent":["import { Node, Prefab, NodePool, instantiate, Component, CCInteger } from 'cc';\n\n@ccclass('PoolFactoryComponent')\nexport class PoolFactoryComponent extends Component {\n\n    @property({ type: Prefab })\n    private prefab: Prefab;\n\n\n    @property({ type: CCInteger })\n    public Size: number = 0;\n\n    private _pool: NodePool;\n\n    protected onLoad(): void {\n        for (let i = 0; i < this.Size; i++) {\n            const coin = instantiate(this.prefab);\n            this.pool.put(coin);\n        }\n    }\n\n    public get(): Node {\n        let node = this.pool.get();\n        if (!node) {\n            node = this.decorate(instantiate(this.prefab));\n        }\n        return node;\n    }\n\n    public decorate(node: Node): Node {\n        return node;\n    }\n\n    public put(coin: Node): void {\n        this.pool.put(coin);\n    }\n\n    set pool(value: NodePool) {\n        this._pool = value;\n    }\n\n    get pool(): NodePool {\n        return this._pool;\n    }\n}\n\nfunction property(arg0: { type: typeof Prefab; }): (target: PoolFactory, propertyKey: \"prefab\") => void {\n    throw new Error('Function not implemented.');\n}\nfunction ccclass(arg0: string): (target: typeof PoolFactory) => void | typeof PoolFactory {\n    throw new Error('Function not implemented.');\n}\n\n"]}