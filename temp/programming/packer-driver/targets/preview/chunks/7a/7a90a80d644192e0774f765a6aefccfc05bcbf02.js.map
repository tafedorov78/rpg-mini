{"version":3,"sources":["file:///Users/artemfedorov/Documents/dev/rpg-mini/assets/Scripts/components/poolFactory/PoolObjectComponent.ts"],"names":["_decorator","CCInteger","Component","instantiate","NodePool","Prefab","v3","ccclass","property","PoolObjectComponent","type","_pool","onLoad","pool","i","Size","node","prefab","put","get","decorate","setScale","value"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,E,OAAAA,E;;;;;;;;;OAC1E;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;qCAGjBS,mB,WADZF,OAAO,CAAC,qBAAD,C,UAGHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL;AAAR,OAAD,C,UAGRG,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAET;AAAR,OAAD,C,2BANb,MACaQ,mBADb,SACyCP,SADzC,CACmD;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAQvCS,KARuC;AAAA;;AAUrCC,QAAAA,MAAM,GAAS;AACrB,eAAKC,IAAL,GAAY,IAAIT,QAAJ,EAAZ;;AAEA,eAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,IAAzB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,gBAAME,IAAI,GAAGb,WAAW,CAAC,KAAKc,MAAN,CAAxB;AACA,iBAAKJ,IAAL,CAAUK,GAAV,CAAcF,IAAd;AACH;AACJ;;AAEMG,QAAAA,GAAG,GAAS;AACf,cAAIH,IAAI,GAAG,KAAKH,IAAL,CAAUM,GAAV,EAAX;;AACA,cAAI,CAACH,IAAL,EAAW;AACPA,YAAAA,IAAI,GAAG,KAAKI,QAAL,CAAcjB,WAAW,CAAC,KAAKc,MAAN,CAAzB,CAAP;AACH;;AACD,iBAAOD,IAAP;AACH;;AAEMI,QAAAA,QAAQ,CAACJ,IAAD,EAAmB;AAC9B,iBAAOA,IAAP;AACH;;AAEME,QAAAA,GAAG,CAACF,IAAD,EAAmB;AACzBA,UAAAA,IAAI,CAACK,QAAL,CAAcf,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB;AACA,eAAKO,IAAL,CAAUK,GAAV,CAAcF,IAAd;AACH;;AAEO,YAAJH,IAAI,CAACS,KAAD,EAAkB;AACtB,eAAKX,KAAL,GAAaW,KAAb;AACH;;AAEO,YAAJT,IAAI,GAAa;AACjB,iBAAO,KAAKF,KAAZ;AACH;;AA1C8C,O;;;;;;;;;;iBAMzB,C","sourcesContent":["import { _decorator, CCInteger, Component, instantiate, Node, NodePool, Prefab, v3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PoolObjectComponent')\nexport class PoolObjectComponent extends Component {\n\n    @property({ type: Prefab })\n    private prefab: Prefab;\n\n    @property({ type: CCInteger })\n    public Size: number = 0;\n\n    private _pool: NodePool;\n\n    protected onLoad(): void {\n        this.pool = new NodePool();\n\n        for (let i = 0; i < this.Size; i++) {\n            const node = instantiate(this.prefab);\n            this.pool.put(node);\n        }\n    }\n\n    public get(): Node {\n        let node = this.pool.get();\n        if (!node) {\n            node = this.decorate(instantiate(this.prefab));\n        }\n        return node;\n    }\n\n    public decorate(node: Node): Node {\n        return node;\n    }\n\n    public put(node: Node): void {\n        node.setScale(v3(1, 1, 1));\n        this.pool.put(node);\n    }\n\n    set pool(value: NodePool) {\n        this._pool = value;\n    }\n\n    get pool(): NodePool {\n        return this._pool;\n    }\n}\n\n"]}