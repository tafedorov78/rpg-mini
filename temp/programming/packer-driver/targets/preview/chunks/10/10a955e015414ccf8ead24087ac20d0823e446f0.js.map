{"version":3,"sources":["file:///Users/artemfedorov/Documents/dev/rpg-mini/assets/Scripts/scenes/LoadingScene.ts"],"names":["_decorator","assetManager","Component","director","JsonAsset","resources","Facade","ccclass","LoadingScene","start","bundleNames","loadedBundles","forEach","bundleName","loadBundle","err","bundle","console","error","log","length","loadJSON","load","jsonAsset","json","loadScene"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;;AAC5DC,MAAAA,M;;;;;;;;;OACD;AAAEC,QAAAA;AAAF,O,GAAcP,U;;8BAGPQ,Y,WADZD,OAAO,CAAC,cAAD,C,gBAAR,MACaC,YADb,SACkCN,SADlC,CAC4C;AAExCO,QAAAA,KAAK,GAAG;AACJ,cAAMC,WAAW,GAAG,CAAC,YAAD,EAAe,YAAf,CAApB;AACA,cAAIC,aAAa,GAAG,CAApB,CAFI,CAIJ;;AACAD,UAAAA,WAAW,CAACE,OAAZ,CAAoBC,UAAU,IAAI;AAC9BZ,YAAAA,YAAY,CAACa,UAAb,CAAwBD,UAAxB,EAAoC,CAACE,GAAD,EAAMC,MAAN,KAAiB;AACjD,kBAAID,GAAJ,EAAS;AACLE,gBAAAA,OAAO,CAACC,KAAR,6BAAwCL,UAAxC,EAAsDE,GAAtD;AACA;AACH;;AACDE,cAAAA,OAAO,CAACE,GAAR,qBAA8BN,UAA9B;AAEAF,cAAAA,aAAa;;AACb,kBAAIA,aAAa,KAAKD,WAAW,CAACU,MAAlC,EAA0C;AAEtC,qBAAKC,QAAL;AACH;AACJ,aAZD;AAaH,WAdD;AAeH;;AAEDA,QAAAA,QAAQ,GAAS;AACbhB,UAAAA,SAAS,CAACiB,IAAV,CAAe,iBAAf,EAAkClB,SAAlC,EAA6C,CAACW,GAAD,EAAMQ,SAAN,KAAoB;AAC7D,gBAAIR,GAAJ,EAAS;AACLE,cAAAA,OAAO,CAACC,KAAR,CAAc,2BAAd,EAA2CH,GAA3C;AACA;AACH;;AACD;AAAA;AAAA,kCAAOS,IAAP,GAAcD,SAAS,CAACC,IAAxB;AACArB,YAAAA,QAAQ,CAACsB,SAAT,CAAmB,mBAAnB;AACH,WAPD;AAQH;;AAjCuC,O","sourcesContent":["import { _decorator, assetManager, Component, director, JsonAsset, resources } from 'cc';\nimport Facade from '../Facade';\nconst { ccclass } = _decorator;\n\n@ccclass('LoadingScene')\nexport class LoadingScene extends Component {\n\n    start() {\n        const bundleNames = ['Characters', 'HeroesIcon'];\n        let loadedBundles = 0;\n\n        // Load each bundle\n        bundleNames.forEach(bundleName => {\n            assetManager.loadBundle(bundleName, (err, bundle) => {\n                if (err) {\n                    console.error(`Failed to load bundle: ${bundleName}`, err);\n                    return;\n                }\n                console.log(`Loaded bundle: ${bundleName}`);\n\n                loadedBundles++;\n                if (loadedBundles === bundleNames.length) {\n\n                    this.loadJSON();\n                }\n            });\n        });\n    }\n\n    loadJSON(): void {\n        resources.load('json/GameConfig', JsonAsset, (err, jsonAsset) => {\n            if (err) {\n                console.error('Failed to load JSON file:', err);\n                return;\n            }\n            Facade.json = jsonAsset.json;\n            director.loadScene('SplashScreenScene');\n        });\n    }\n}\n"]}