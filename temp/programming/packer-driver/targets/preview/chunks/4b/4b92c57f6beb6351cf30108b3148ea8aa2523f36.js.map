{"version":3,"sources":["file:///Users/artemfedorov/Documents/dev/rpg-mini/assets/Scripts/components/HeroesTabComponent.ts"],"names":["_decorator","assetManager","Component","instantiate","Prefab","ScrollView","SpriteFrame","Facade","HeroCardComponent","ccclass","property","HeroesTabComponent","type","checkedHeroes","cards","gameConfig","heroesConfig","onCardChecked","id","heroConfig","find","hero","push","onCardUnchecked","splice","indexOf","onLoad","json","bundle","getBundle","forEach","load","icon","err","spriteFrame","console","error","card","createCard","node","on","content","addChild","data","heroCard","heroCardComponent","getComponent","setIcon","setData"],"mappings":"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","sourcesContent":["import { _decorator, assetManager, Component, instantiate, Node, Prefab, ScrollView, SpriteFrame } from 'cc';\nimport Facade from '../Facade';\nimport { HeroCardComponent } from '../../prefabs/heroCard/scripts/HeroCardComponent';\nimport { GameConfig, HeroConfig } from '../ConfigTypes';\nconst { ccclass, property } = _decorator;\n\n@ccclass('HeroesTabComponent')\nexport class HeroesTabComponent extends Component {\n\n    @property({ type: Prefab })\n    public heroCard: Prefab = null;\n\n    @property({ type: ScrollView })\n    public ScrollView: ScrollView = null;\n\n    public checkedHeroes: HeroConfig[] = [];\n\n    private cards: HeroCardComponent[] = [];\n    private gameConfig: GameConfig;\n    private heroesConfig: HeroConfig[];\n\n    onLoad() {\n        this.gameConfig = Facade.json;\n        this.heroesConfig = this.gameConfig.heroesConfig;\n\n        const bundle = assetManager.getBundle('HeroesIcon');\n\n        this.heroesConfig.forEach((hero: HeroConfig) => {\n            bundle.load(`${hero.icon}/spriteFrame`, SpriteFrame, (err, spriteFrame) => {\n                if (err) {\n                    console.error('Error loading SpriteFrame from bundle:', err);\n                    return;\n                }\n                const card = this.createCard(spriteFrame, hero);\n                card.node.on('checked', this.onCardChecked);\n                card.node.on('unchecked', this.onCardUnchecked);\n                this.cards.push(card);\n\n                this.ScrollView.content.addChild(card.node);\n            });\n        });\n    }\n\n    private onCardChecked = (id: number) => {\n        const heroConfig = this.heroesConfig.find((hero: HeroConfig) => hero.id === id);\n        this.checkedHeroes.push(heroConfig);\n    }\n\n    private onCardUnchecked = (id: number) => {\n        const heroConfig = this.heroesConfig.find((hero: HeroConfig) => hero.id === id);\n        this.checkedHeroes.splice(this.checkedHeroes.indexOf(heroConfig), 1);\n    }\n\n    private createCard(spriteFrame: SpriteFrame, data: HeroConfig): HeroCardComponent {\n        const card = instantiate(this.heroCard);\n        const heroCardComponent = card.getComponent(HeroCardComponent);\n        heroCardComponent.setIcon(spriteFrame);\n        heroCardComponent.setData(data);\n        return heroCardComponent;\n    }\n}\n\n"]}