{"version":3,"sources":["file:///Users/artemfedorov/Documents/dev/rpg-mini/assets/prefabs/auth/scripts/AuthComponent.ts"],"names":["EditBox","Button","_decorator","Component","log","Facade","ccclass","property","AuthComponent","isRegistered","onLoad","checkIfRegistered","loadCredentials","loginButton","node","on","onLoginButtonClick","username","usernameInput","string","trim","password","passwordInput","authenticate","register","savedUsername","localStorage","getItem","savedPassword","saveCredentials","setItem"],"mappings":"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","sourcesContent":["import { EditBox, Button, _decorator, Component, log } from \"cc\";\nimport Facade from \"../../../Scripts/Facade\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass\nexport default class AuthComponent extends Component {\n\n    @property(EditBox)\n    private usernameInput: EditBox = null;\n\n    @property(EditBox)\n    private passwordInput: EditBox = null;\n\n    @property(Button)\n    private loginButton: Button = null;\n\n    private isRegistered: boolean = false;\n\n    onLoad() {\n        this.isRegistered = this.checkIfRegistered();\n        this.loadCredentials();\n        this.loginButton.node.on('click', this.onLoginButtonClick, this);\n    }\n\n    private onLoginButtonClick() {\n        const username = this.usernameInput.string.trim();\n        const password = this.passwordInput.string.trim();\n\n        if (username && password) {\n            if (this.isRegistered) {\n                if (this.authenticate(username, password)) {\n                    log('Login successful!');\n\n                    Facade.username = username;\n                } else {\n                    log('Invalid username or password.');\n                }\n            } else {\n                this.register(username, password);\n                log('Registration successful! You can now log in.');\n            }\n        } else {\n            log('Please enter both username and password.');\n        }\n    }\n\n    private authenticate(username: string, password: string): boolean {\n        const savedUsername = localStorage.getItem('username');\n        const savedPassword = localStorage.getItem('password');\n\n        return savedUsername === username && savedPassword === password;\n    }\n\n    private register(username: string, password: string) {\n        this.saveCredentials(username, password);\n        this.isRegistered = true;\n    }\n\n    private saveCredentials(username: string, password: string) {\n        // Save credentials to localStorage\n        localStorage.setItem('username', username);\n        localStorage.setItem('password', password);\n    }\n\n    private loadCredentials() {\n        const savedUsername = localStorage.getItem('username');\n        const savedPassword = localStorage.getItem('password');\n\n        if (savedUsername && savedPassword) {\n            this.usernameInput.string = savedUsername;\n            this.passwordInput.string = savedPassword;\n        }\n    }\n\n    private checkIfRegistered(): boolean {\n        const savedUsername = localStorage.getItem('username');\n        const savedPassword = localStorage.getItem('password');\n\n        return !!(savedUsername && savedPassword);\n    }\n}\n"]}